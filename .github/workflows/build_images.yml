name: build_images

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
        description: "Tag for the image"
  workflow_dispatch:
    inputs:
      tag:
        required: true
        type: string
        description: "Tag for the image"

env:
  REGISTRY: ${{ secrets.DIGITALOCEAN_CONTAINER_URL }}
  TAG: ${{ github.event.inputs.tag }}
  SERVER_IMAGE_NAME: "orientation-server"
  CLIENT_IMAGE_NAME: "orientation-client"

jobs:
  build_and_push:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build server image
        run: cd server && docker build -t $(echo $REGISTRY)/$(echo $SERVER_IMAGE_NAME):$(echo $TAG) .

      - name: Build client image
        run: cd client && docker build -t $(echo $REGISTRY)/$(echo $CLIENT_IMAGE_NAME):$(echo $TAG) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Remove all old server images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $SERVER_IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $SERVER_IMAGE_NAME) $(doctl registry repository list-tags $(echo $SERVER_IMAGE_NAME) | grep -o "$(echo $TAG)") --force; else echo "No repository"; fi

      - name: Remove all old client images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $CLIENT_IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $CLIENT_IMAGE_NAME) $(doctl registry repository list-tags $(echo $CLIENT_IMAGE_NAME) | grep -o "$(echo $TAG)") --force; else echo "No repository"; fi

      - name: Push server image to container registry
        run: docker push $(echo $REGISTRY)/$(echo $SERVER_IMAGE_NAME):$(echo $TAG)

      - name: Push client image to container registry
        run: docker push $(echo $REGISTRY)/$(echo $CLIENT_IMAGE_NAME):$(echo $TAG)
